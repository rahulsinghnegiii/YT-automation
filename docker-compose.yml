# =============================================================================
# YouTube Automation Platform - Production Docker Compose
# =============================================================================
version: '3.8'

services:
  # Main Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: youtube-automation
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - TZ=${TZ:-UTC}
    env_file:
      - .env
    volumes:
      # Persistent data volumes
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./downloads:/app/downloads
      - ./processed:/app/processed
      - ./temp:/app/temp
      - ./credentials:/app/credentials
      - ./backups:/app/backups
      - ./shorts:/app/shorts
      - ./thumbnails:/app/thumbnails
      # Read-only config
      - ./.env:/app/.env:ro
    networks:
      - youtube-automation
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    user: "1001:1001"

  # Redis for Caching and Session Storage
  redis:
    image: redis:7-alpine
    container_name: youtube-automation-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - youtube-automation
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: youtube-automation-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    networks:
      - youtube-automation
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 32M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true
    profiles:
      - nginx  # Only start if explicitly requested

# Named Volumes for Persistent Data
volumes:
  redis_data:
    driver: local

# Networks
networks:
  youtube-automation:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: youtube-automation
    ipam:
      config:
        - subnet: 172.20.0.0/16
